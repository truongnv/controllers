{"version":3,"file":"network-access.js","sourceRoot":"","sources":["../../../src/permissions/endowments/network-access.ts"],"names":[],"mappings":";;;AAAA,8CAKuB;AAEvB,MAAM,cAAc,GAAG,0BAA0B,CAAC;AASlD;;;;;;;GAOG;AACH,MAAM,oBAAoB,GAItB,CAAC,eAAqB,EAAE,EAAE;IAC5B,OAAO;QACL,cAAc,EAAE,2BAAc,CAAC,SAAS;QACxC,SAAS,EAAE,cAAc;QACzB,cAAc,EAAE,IAAI;QACpB,eAAe,EAAE,CAAC,cAAsC,EAAE,EAAE;YAC1D,OAAO,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAChC,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AAEW,QAAA,6BAA6B,GAAG,MAAM,CAAC,MAAM,CAAC;IACzD,SAAS,EAAE,cAAc;IACzB,oBAAoB;CACZ,CAAC,CAAC","sourcesContent":["import {\n  PermissionSpecificationBuilder,\n  PermissionType,\n  EndowmentGetterParams,\n  ValidPermissionSpecification,\n} from '../Permission';\n\nconst permissionName = 'endowment:network-access';\n\ntype NetworkAccessEndowmentSpecification = ValidPermissionSpecification<{\n  permissionType: PermissionType.Endowment;\n  targetKey: typeof permissionName;\n  endowmentGetter: (_options?: any) => ['fetch', 'WebSocket'];\n  allowedCaveats: null;\n}>;\n\n/**\n * `endowment:network-access` returns the name of global browser API(s) that\n * enable network access. This is intended to populate the endowments of the\n * SES Compartment in which a Snap executes.\n *\n * @param _builderOptions - optional specification builder options\n * @returns The specification for the network endowment\n */\nconst specificationBuilder: PermissionSpecificationBuilder<\n  PermissionType.Endowment,\n  any,\n  NetworkAccessEndowmentSpecification\n> = (_builderOptions?: any) => {\n  return {\n    permissionType: PermissionType.Endowment,\n    targetKey: permissionName,\n    allowedCaveats: null,\n    endowmentGetter: (_getterOptions?: EndowmentGetterParams) => {\n      return ['fetch', 'WebSocket'];\n    },\n  };\n};\n\nexport const networkAccessEndowmentBuilder = Object.freeze({\n  targetKey: permissionName,\n  specificationBuilder,\n} as const);\n"]}